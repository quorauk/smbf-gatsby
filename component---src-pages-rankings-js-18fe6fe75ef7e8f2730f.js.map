{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.array.flat-map.js","webpack:///./src/pages/rankings.js","webpack:///./node_modules/core-js/modules/_flatten-into-array.js"],"names":["$export","flattenIntoArray","toObject","toLength","aFunction","arraySpeciesCreate","P","flatMap","callbackfn","sourceLen","A","O","this","length","arguments","StyledContainer","styled","Container","query","ComponentName","gameNodes","data","allChallongeTournament","group","nodes","game","sort","a","b","moment","order_by","diff","title","map","node","filteredParticipants","participants","filter","participant","includes","final_rank","bg","text","style","margin","Header","Body","rankToMedal","name","Footer","created_at","isArray","isObject","ctx","IS_CONCAT_SPREADABLE","module","exports","target","original","source","start","depth","mapper","thisArg","element","spreadable","targetIndex","sourceIndex","mapFn","undefined","TypeError"],"mappings":"6FAEA,IAAIA,EAAU,EAAQ,QAClBC,EAAmB,EAAQ,QAC3BC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAY,EAAQ,QACpBC,EAAqB,EAAQ,QAEjCL,EAAQA,EAAQM,EAAG,QAAS,CAC1BC,QAAS,SAAiBC,GACxB,IACIC,EAAWC,EADXC,EAAIT,EAASU,MAMjB,OAJAR,EAAUI,GACVC,EAAYN,EAASQ,EAAEE,QACvBH,EAAIL,EAAmBM,EAAG,GAC1BV,EAAiBS,EAAGC,EAAGA,EAAGF,EAAW,EAAG,EAAGD,EAAYM,UAAU,IAC1DJ,KAIX,EAAQ,OAAR,CAAiC,Y,iQCX3BK,EAAkBC,YAAOC,KAAV,4EAAGD,CAAH,sGAkCRE,EAAK,aAoBHC,UA9CO,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACEC,uBAAuBC,MAAMhB,SAAU,SAACgB,GAAY,OAAO,OAAP,UAAYA,EAAMC,MAAM,GAAxB,CAA4BC,KAAMF,EAAME,UAEnH,OADAL,EAAUM,MAAK,SAACC,EAAGC,GAAJ,OAAUC,IAAOD,EAAEE,UAAUC,KAAKJ,EAAEG,aAC5C,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAKE,MAAM,aACX,kBAACjB,EAAD,KAEQK,EAAUa,KAAM,SAACC,GACT,IAAMC,EAAuBD,EAAKE,aAAaC,QAAO,gBAAGC,EAAH,EAAGA,YAAH,MAAqB,CAAC,EAAE,EAAE,GAAGC,SAASD,EAAYE,eAExG,OADAL,EAAqBT,MAAM,SAACC,EAAGC,GAAJ,OAAWD,EAAEW,YAAYE,WAAaZ,EAAEU,YAAYE,cACxE,kBAAC,IAAD,CAAMC,GAAG,OAAOC,KAAK,QAAQC,MAAO,CAAEC,OAAQ,WACjD,kBAAC,IAAKC,OAAN,CAAaH,KAAK,SAASR,EAAKT,MAChC,kBAAC,IAAKqB,KAAN,gCACIX,EAAqBF,KAAI,gBAAGK,EAAH,EAAGA,YAAH,OACrB,6BAAOS,YAAYT,EAAYE,YAA/B,IAA+CF,EAAYU,UAInE,kBAAC,IAAKC,OAAN,CAAaP,KAAK,SAAlB,iBAAyCR,EAAKgB,oB,oCClC1E,IAAIC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBjD,EAAW,EAAQ,QACnBkD,EAAM,EAAQ,QACdC,EAAuB,EAAQ,OAAR,CAAkB,sBAgC7CC,EAAOC,QA9BP,SAASvD,EAAiBwD,EAAQC,EAAUC,EAAQlD,EAAWmD,EAAOC,EAAOC,EAAQC,GAMnF,IALA,IAGIC,EAASC,EAHTC,EAAcN,EACdO,EAAc,EACdC,IAAQN,GAAST,EAAIS,EAAQC,EAAS,GAGnCI,EAAc1D,GAAW,CAC9B,GAAI0D,KAAeR,EAAQ,CASzB,GARAK,EAAUI,EAAQA,EAAMT,EAAOQ,GAAcA,EAAaT,GAAYC,EAAOQ,GAE7EF,GAAa,EACTb,EAASY,KAEXC,OAA4BI,KAD5BJ,EAAaD,EAAQV,MACqBW,EAAad,EAAQa,IAG7DC,GAAcJ,EAAQ,EACxBK,EAAcjE,EAAiBwD,EAAQC,EAAUM,EAAS7D,EAAS6D,EAAQnD,QAASqD,EAAaL,EAAQ,GAAK,MACzG,CACL,GAAIK,GAAe,iBAAkB,MAAMI,YAC3Cb,EAAOS,GAAeF,EAGxBE,IAEFC,IAEF,OAAOD","file":"component---src-pages-rankings-js-18fe6fe75ef7e8f2730f.js","sourcesContent":["'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Container } from \"react-bootstrap\"\nimport { Card } from \"../components/cards\"\nimport styled from \"styled-components\"\nimport moment from \"moment\"\nimport { rankToMedal } from \"../utils\"\n\nconst StyledContainer = styled(Container)`\n    padding-top: 20px;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    justify-content: space-around;\n`\n\nconst ComponentName = ({ data }) => {\n    const gameNodes = data.allChallongeTournament.group.flatMap ( (group) => { return { ...group.nodes[0], game: group.game } } ) \n    gameNodes.sort((a, b) => moment(b.order_by).diff(a.order_by) )\n    return <Layout>\n        <SEO title=\"Rankings\" />\n        <StyledContainer>\n            {\n                gameNodes.map ( (node) => {\n                        const filteredParticipants = node.participants.filter(({ participant }) => [1,2,3].includes(participant.final_rank))\n                        filteredParticipants.sort(((a, b)  => a.participant.final_rank - b.participant.final_rank))\n                        return <Card bg=\"dark\" text=\"light\" style={{ margin: \"20px 0\" }}>\n                            <Card.Header text=\"light\">{node.game}</Card.Header>\n                            <Card.Body>                        {\n                                filteredParticipants.map(({ participant }) =>\n                                    <div>{ rankToMedal(participant.final_rank) } { participant.name }</div>\n                                )\n                            }\n                            </Card.Body>\n                            <Card.Footer text=\"light\">last updated: {node.created_at}</Card.Footer>\n                        </Card>\n                })\n            }\n        </StyledContainer>\n    </Layout>\n}\n\nexport const query = graphql`\n  {\n    allChallongeTournament(sort: {fields: created_at, order: DESC}, limit: 30) {\n      group(field: game_name, limit: 1) {\n        game: fieldValue\n        nodes {\n            order_by: created_at\n            created_at(fromNow: true)\n            participants {\n                participant {\n                final_rank\n                name\n                }\n            }\n        }\n      }\n    }\n  }\n`\n\nexport default ComponentName","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}